/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var u=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var y=Object.prototype.hasOwnProperty;var D=(r,l)=>{for(var t in l)u(r,t,{get:l[t],enumerable:!0})},N=(r,l,t,e)=>{if(l&&typeof l=="object"||typeof l=="function")for(let i of F(l))!y.call(r,i)&&i!==t&&u(r,i,{get:()=>l[i],enumerable:!(e=w(l,i))||e.enumerable});return r};var b=r=>N(u({},"__esModule",{value:!0}),r);var C={};D(C,{default:()=>d});module.exports=b(C);var o=require("obsidian");var f={settings:[{templateFileLocation:"",newFileFolder:"",dateFormat:"",timeOffset:""}]};var a=require("obsidian"),c=class extends a.AbstractInputSuggest{constructor(t,e,i,s,n){super(t,e);this.plugin=i,this.index=s,this.suggestionType=n}getSuggestions(t){let e=this.app.vault.getFiles();return this.suggestionType==="folder"?this.app.vault.getAllLoadedFiles().filter(n=>n instanceof a.TFolder).filter(n=>n.path.toLowerCase().includes(t.toLowerCase())).map(n=>n.path):e.filter(i=>i.path.toLowerCase().includes(t.toLowerCase())).map(i=>i.path)}renderSuggestion(t,e){e.setText(t)}async selectSuggestion(t){this.setValue(t),this.suggestionType==="folder"?this.plugin.settings.settings[this.index].newFileFolder=t:this.plugin.settings.settings[this.index].templateFileLocation=t,await this.plugin.saveSettings(),this.close()}},h=class extends a.AbstractInputSuggest{constructor(t,e,i,s){super(t,e);this.plugin=i,this.index=s}getSuggestions(t){return(0,a.getIconIds)().filter(i=>i.toLowerCase().includes(t.toLowerCase()))}renderSuggestion(t,e){let i=e.createSpan();(0,a.setIcon)(i,t),e.createSpan({text:" "+t})}async selectSuggestion(t){this.setValue(t),this.plugin.settings.settings[this.index].ribbonIcon=t,await this.plugin.saveSettings(),this.close()}},g=class extends a.PluginSettingTab{constructor(t,e){super(t,e);this.plugin=e}display(){let{containerEl:t}=this;t.empty();for(let e=0;e<this.plugin.settings.settings.length;e++){let i=this.plugin.settings.settings[e];new a.Setting(t).setName(`Config ${e+1}`).setHeading(),new a.Setting(t).setName("Template file location").setDesc("Path to the template file").addText(s=>{let n=s.inputEl;return new c(this.app,n,this.plugin,e,"file"),s.setPlaceholder("Location of template file").setValue(i.templateFileLocation)}),new a.Setting(t).setName("New file folder").setDesc("Folder where new files will be created").addText(s=>{let n=s.inputEl;return new c(this.app,n,this.plugin,e,"folder"),s.setPlaceholder("Location of folder for new file").setValue(i.newFileFolder)}),new a.Setting(t).setName("Date format").setDesc("Date format for new files").addText(s=>s.setPlaceholder("YYYY-MM-DD").setValue(i.dateFormat).onChange(async n=>{this.plugin.settings.settings[e].dateFormat=n,await this.plugin.saveSettings()})),new a.Setting(t).setName("Time offset").setDesc("Time offset for the note").addText(s=>s.setPlaceholder("00:00").setValue(i.timeOffset).onChange(async n=>{this.plugin.settings.settings[e].timeOffset=n,await this.plugin.saveSettings()})),new a.Setting(t).setName("Ribbon icon").setDesc("Icon to display in the ribbon").addSearch(s=>{var p;let n=s.inputEl;new h(this.app,n,this.plugin,e),s.setPlaceholder("calendar").setValue((p=i.ribbonIcon)!=null?p:"")}),new a.Setting(t).setName("Command description").setDesc("Description for the custom command").addText(s=>{var n;return s.setPlaceholder("Custom command description").setValue((n=i.commandDescription)!=null?n:"").onChange(async p=>{this.plugin.settings.settings[e].commandDescription=p,await this.plugin.saveSettings()})}),new a.Setting(t).setName("Delete configuration").addButton(s=>{s.setButtonText("Delete").onClick(async()=>{this.plugin.settings.settings.splice(e,1),await this.plugin.saveSettings(),this.display()})})}new a.Setting(t).setName("Add new configuration").addButton(e=>{e.setButtonText("Add").onClick(async()=>{this.plugin.settings.settings.push({templateFileLocation:"",newFileFolder:"",dateFormat:"",timeOffset:"",ribbonIcon:"",commandDescription:""}),await this.plugin.saveSettings(),this.display()})})}};var d=class extends o.Plugin{async loadSettings(){this.settings=Object.assign({},f,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async onload(){console.log("Loading MultipleDailyNotes"),await this.loadSettings(),this.addSettingTab(new g(this.app,this));for(let t of this.settings.settings)this.addRibbonIcon(t.ribbonIcon||"calendar",t.commandDescription||`Open daily note: ${t.templateFileLocation}`,async()=>{await this.openDailyNote(t)});this.addCommand({id:"create-daily-notes",name:"Create daily notes from config",callback:()=>{for(let t of this.settings.settings)this.createDailyNote(t)}})}async openDailyNote(t){let e=this.getNoteFilePathForConfig(t),i=this.app.vault.getAbstractFileByPath(e);(!i||!(i instanceof o.TFile))&&(await this.createDailyNote(t),i=this.app.vault.getAbstractFileByPath(e)),i instanceof o.TFile?this.app.workspace.getLeaf().openFile(i):new o.Notice("Unable to open daily note")}getNoteFilePathForConfig(t){let e=(0,o.moment)(),i=t.timeOffset||"00:00",s=t.dateFormat||"YYYY-MM-DD",n=parseInt(i.split(":")[0]),p=parseInt(i.split(":")[1]);e.subtract(n,"hours").subtract(p,"minutes");let m=e.format(s)+".md";return(t.newFileFolder.endsWith("/")?t.newFileFolder:t.newFileFolder+"/")+m}async createDailyNote(t){let e=this.app.vault.getAbstractFileByPath(t.templateFileLocation);if(e instanceof o.TFile)try{let i=await this.app.vault.read(e),s=this.getNoteFilePathForConfig(t),n=i,p=this.app.vault.getAbstractFileByPath(s);(!p||!(p instanceof o.TFile))&&(await this.app.vault.create(s,n),new o.Notice(`Created new file: ${s} based off template: ${t.templateFileLocation}`))}catch(i){new o.Notice(`Error creating new file: ${i}`)}else new o.Notice(`Template file not found: ${t.templateFileLocation}`)}onunload(){console.log("Unloading MultipleDailyNotes")}};

/* nosourcemap */